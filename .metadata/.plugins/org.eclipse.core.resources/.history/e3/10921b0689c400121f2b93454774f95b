
public class Permutationer {

//	Konstruera en funktion som skriver ut alla permutationer av en strŠng. T.ex. skall anropet 
//	permutations(ÓabcÓ); 
//	ge utskriften 
//	abc 
//	 acb 
//	 bac 
//	 bca 
//	 cab 
//	 cba 
//	Ledning: Permutationerna av strŠngen S fŒs genom att fšr varje tecken c i S addera c till varje 
//	permutation av S« dŠr S« fŒs genom att ta bort c ur S. Ex. addera a till varje permutation av bc, b
//	till varje permutation av ac, och c till varje permutation av ab. En strŠng av lŠngd n har n! 
//	permutationer. 
//	Skriv en rekursiv hjŠlpfunktion som bygger upp en permutation i en extra ackumulerande 
//	parameter (fšr exempel pŒ tekniken se fibIter i den fšrsta fšrelŠsningen om rekursion). 
//	Funktionen fŒr innehŒlla en loop. Anropa hjŠlpfunktionen frŒn permutations. 
	
	public static void main(String[] args){
		permutations("aRandomString");
	}
	public static void permutations(String s) {
		permutations("", s);
	}
	public static void permutations(String first, String second) {
		if (second.length()>0){
			for (int i =0;i<second.length();i++){
				permutations(first+second.charAt(i), second.substring(0, i)+second.substring(i+1));
			}
		}else{
			System.out.println(first);
		}
	}
}

